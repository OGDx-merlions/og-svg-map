{"version":3,"sources":["og-svg-map.es6.js"],"names":["Polymer","is","behaviors","IronResizableBehavior","listeners","properties","width","type","String","value","height","observer","contextPaneProportion","Number","isUpstreamVisible","Boolean","isMidstreamVisible","isDownstreamVisible","isPredictiveVisible","attached","contextPaneOpen","d3","Px","svg","select","zoomControl","zoom","scaleExtent","on","attr","event","transform","mapZoomArea","style","call","_addContextualListeners","toggleContextPane","currHeightNum","replace","cpMinHeightPercentage","mapHeightPercentage","newMapHeight","Math","ceil","contextPaneMinHeight","defaultHeight","contextPaneMaxHeight","closeContextPane","invalidateSize","$","map","_showAll","selector","querySelectorAll","forEach","elt","display","_hideAll","_toggleGroup","_stateName","_selector","_pressedCls","undefined","_toggleUpstream","_toggleMidstream","_toggleDownstream","_togglePredictive","_compute","_adjustFilterVerticalMargin","newHeight","oldHeight","_onIronResize","_zoomIn","scaleBy","transition","duration","_zoomOut","listen","_openContextPane","fire","contextFragment","currentTarget","classList"],"mappings":"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","file":"og-svg-map.js","sourcesContent":["(function() {\n  Polymer({\n\n    is: 'og-svg-map', \n\n    behaviors: [Polymer.IronResizableBehavior],\n\n    listeners: {\n      'iron-resize': '_onIronResize'\n    },\n\n    properties: {\n      /**\n       * Component width\n       */\n      width: {\n        type: String,\n        value: '75vw'\n      },\n      /**\n      * Component Height\n      */\n      height: {\n        type: String,\n        value: '500px',\n        observer: '_adjustFilterVerticalMargin'\n      },\n      contextPaneProportion: {\n        type: Number,\n        value: 0.35\n      },\n      isUpstreamVisible: {\n        type: Boolean,\n        value: true\n      },\n      isMidstreamVisible: {\n        type: Boolean,\n        value: true\n      },\n      isDownstreamVisible: {\n        type: Boolean,\n        value: true\n      },\n      isPredictiveVisible: {\n        type: Boolean,\n        value: true\n      }\n    },\n\n    attached() {\n      this.contextPaneOpen = false;\n      const d3 = Px.d3;\n      this.svg  = d3.select(\"#map svg\");\n      this.zoomControl = d3.zoom()\n        .scaleExtent([1, 5])\n        .on(\"zoom\", () => {\n          this.svg.attr(\"transform\", d3.event.transform);\n      });\n      this.mapZoomArea = this.svg\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"width\", \"100%\")\n        .attr(\"height\", \"100%\")\n        .style(\"cursor\", \"grab\")\n        .call(this.zoomControl);\n      this._addContextualListeners();\n    },\n\n    toggleContextPane() {\n      const currHeightNum = this.height.replace(/\\D/g, '');\n      const cpMinHeightPercentage = this.contextPaneProportion;\n      const mapHeightPercentage = (1 - cpMinHeightPercentage);\n      if(!this.contextPaneOpen) {\n        const newMapHeight = Math.ceil(currHeightNum * mapHeightPercentage);\n        this.height = this.height.replace(currHeightNum, newMapHeight);\n        this.contextPaneMinHeight = Math.ceil(currHeightNum * cpMinHeightPercentage);\n        this.contextPaneOpen = true;\n      } else {\n        this.height = this.defaultHeight;\n        this.contextPaneMinHeight = 0;\n        this.contextPaneMaxHeight = 0;\n        this.contextPaneOpen = false;\n      }\n    },\n\n    closeContextPane() {\n      if(this.contextPaneOpen) {\n        this.toggleContextPane();\n      }\n    },\n\n    invalidateSize() {\n      this.$.map.invalidateSize();\n    },\n    _showAll(selector) {\n      this.querySelectorAll(selector).forEach((elt) => {\n        elt.style.display = 'block';\n      });\n    },\n    _hideAll(selector) {\n      this.querySelectorAll(selector).forEach((elt) => {\n        elt.style.display = 'none';\n      });\n    },\n    _toggleGroup(_stateName, _selector, _pressedCls) {\n      if(this[_stateName]) {\n        this._hideAll(_selector);\n        this[_pressedCls] = 'pressed';\n      } else {\n        this._showAll(_selector);\n        this[_pressedCls] = undefined;\n      }\n      this[_stateName] = !this[_stateName];\n    },\n    _toggleUpstream() {\n      this._toggleGroup('isUpstreamVisible', \n        '.upstream', 'upstreamPressedCls');\n    },\n    _toggleMidstream() {\n      this._toggleGroup('isMidstreamVisible', \n        '.midstream', 'midstreamPressedCls');\n    },\n    _toggleDownstream() {\n      this._toggleGroup('isDownstreamVisible', \n        '.downstream', 'downstreamPressedCls');\n    },\n    _togglePredictive() {\n      this._toggleGroup('isPredictiveVisible', \n        '.predictive', 'predictivePressedCls');\n    },\n    _compute(contextPaneOpen) {\n      return !contextPaneOpen;\n    },\n    _adjustFilterVerticalMargin(newHeight, oldHeight) {\n      if(!oldHeight) {\n        this.defaultHeight = newHeight;\n      }\n    },\n    _onIronResize() {},\n    _zoomIn() {\n      this.zoomControl.scaleBy(\n        this.mapZoomArea.transition().duration(750), 1.3);\n    },\n    _zoomOut() {\n      this.zoomControl.scaleBy(\n        this.mapZoomArea.transition().duration(750), 1 / 1.3);\n    },\n    _addContextualListeners() {\n      this.querySelectorAll('.contextual').forEach((elt) => {\n        this.listen(elt, 'tap', '_openContextPane');\n      });\n    },\n    _openContextPane(event) {\n      if(!this.contextPaneOpen) {\n        this.toggleContextPane();\n      }\n      this.fire('contextual-tapped', {\n        event: event, \n        contextFragment: event.currentTarget,\n        classList: event.currentTarget.classList\n      });\n    }\n  });\n})();\n"]}