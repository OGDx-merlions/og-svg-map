{"version":3,"sources":["og-svg-map.es6.js"],"names":["Polymer","is","behaviors","IronResizableBehavior","listeners","properties","width","type","String","value","height","observer","contextPaneProportion","Number","isUpstreamVisible","Boolean","isMidstreamVisible","isDownstreamVisible","isPredictiveVisible","now","Date","getTime","attached","contextPaneOpen","d3","Px","svg","select","$","map","querySelector","dims","getBoundingClientRect","me","zoomControl","zoom","extent","x","y","scaleExtent","translateExtent","on","e","attr","event","transform","scale","split","replace","parseFloat","factor","mapZoomArea","style","call","_addContextualListeners","toggleContextPane","currHeightNum","cpMinHeightPercentage","mapHeightPercentage","newMapHeight","Math","ceil","contextPaneMinHeight","defaultHeight","contextPaneMaxHeight","closeContextPane","invalidateSize","_showAll","selector","querySelectorAll","forEach","elt","display","_hideAll","_toggleGroup","_stateName","_selector","_pressedCls","undefined","_toggleUpstream","_toggleMidstream","_toggleDownstream","_togglePredictive","_compute","_adjustFilterVerticalMargin","newHeight","oldHeight","_onIronResize","_zoomIn","scaleBy","transition","duration","_zoomOut","listen","_gotoDefaultLocation","zoomIdentity","translate","_openContextPane","fire","contextFragment","currentTarget","classList"],"mappings":"aAAA,CAAC,UAAW,CACVA,QAAQ,CAENC,GAAI,YAFE,CAINC,UAAW,CAACF,QAAQG,qBAAT,CAJL,CAMNC,UAAW,CACT,cAAe,eADN,CANL,CAUNC,WAAY,CACV;;;;SAKAC,MAAO,CACLC,KAAMC,MADD,CAELC,MAAO,MAFF,CANG,CAUV;;;;QAKAC,OAAQ,CACNH,KAAMC,MADA,CAENC,MAAO,OAFD,CAGNE,SAAU,6BAHJ,CAfE,CAoBV;;;;SAKAC,sBAAuB,CACrBL,KAAMM,MADe,CAErBJ,MAAO,IAFc,CAzBb,CA6BVK,kBAAmB,CACjBP,KAAMQ,OADW,CAEjBN,MAAO,IAFU,CA7BT,CAiCVO,mBAAoB,CAClBT,KAAMQ,OADY,CAElBN,MAAO,IAFW,CAjCV,CAqCVQ,oBAAqB,CACnBV,KAAMQ,OADa,CAEnBN,MAAO,IAFY,CArCX,CAyCVS,oBAAqB,CACnBX,KAAMQ,OADa,CAEnBN,MAAO,IAFY,CAzCX,CA6CVU,IAAK,CACHZ,KAAMC,MADH,CAEHC,KAFG,iBAEK,CACN,MAAO,IAAIW,KAAJ,GAAWC,OAAX,EACR,CAJE,CA7CK,CAVN,CA+DNC,QA/DM,oBA+DK,CACT,KAAKC,eAAL,CAAuB,KAAvB,CACA,GAAMC,IAAKC,GAAGD,EAAd,CACA,KAAKE,GAAL,CAAYF,GAAGG,MAAH,CAAU,KAAKC,CAAL,CAAOC,GAAP,CAAWC,aAAX,CAAyB,KAAzB,CAAV,CAAZ,CACA,GAAIC,MAAO,KAAKH,CAAL,CAAOC,GAAP,CAAWC,aAAX,CAAyB,KAAzB,EAAgCE,qBAAhC,EAAX,CACA,GAAMC,IAAK,IAAX,CACA,KAAKC,WAAL,CAAmBV,GAAGW,IAAH,GAChBC,MADgB,CACT,CAAC,CAAC,CAACL,KAAKM,CAAP,CAAU,CAACN,KAAKO,CAAhB,CAAD,CAAqB,CAACP,KAAKM,CAAN,CAASN,KAAKO,CAAd,CAArB,CADS,EAEhBC,WAFgB,CAEJ,CAAC,CAAD,CAAI,CAAJ,CAFI,EAGhBC,eAHgB,CAGA,CAAC,CAAC,CAACT,KAAKM,CAAP,CAAU,CAACN,KAAKO,CAAhB,CAAD,CAAqB,CAACP,KAAKM,CAAN,CAASN,KAAKO,CAAL,CAAO,CAAhB,CAArB,CAHA,EAIhBG,EAJgB,CAIb,MAJa,CAIL,SAACC,CAAD,CAAO,CACjB,GAAG,CAACX,KAAKzB,KAAT,CAAgB,CACZyB,KAAOE,GAAGL,CAAH,CAAKC,GAAL,CAASC,aAAT,CAAuB,KAAvB,EAA8BE,qBAA9B,EAAP,CACAC,GAAGC,WAAH,CAAeE,MAAf,CAAsB,CAAC,CAAC,CAACL,KAAKM,CAAP,CAAU,CAACN,KAAKO,CAAhB,CAAD,CAAqB,CAACP,KAAKM,CAAN,CAASN,KAAKO,CAAd,CAArB,CAAtB,CACH,CACDL,GAAGP,GAAH,CAAOiB,IAAP,CAAY,WAAZ,CAAyBnB,GAAGoB,KAAH,CAASC,SAAlC,EACA,GAAIC,OAAQb,GAAGP,GAAH,CAAOiB,IAAP,CAAY,WAAZ,EAAyBI,KAAzB,CAA+B,QAA/B,EAAyC,CAAzC,EAA4CC,OAA5C,CAAoD,GAApD,CAAyD,EAAzD,CAAZ,CACAF,MAAQG,WAAWH,KAAX,CAAR,CACA,GAAMI,QAASJ,OAAS,CAAT,CAAa,CAAb,CAAkB,CAACA,MAAM,CAAP,EAAU,EAA3C,CACAb,GAAGC,WAAH,CAAeM,eAAf,CAA+B,CAAC,CAAC,CAACT,KAAKM,CAAP,CAAU,CAACN,KAAKO,CAAhB,CAAD,CAAqB,CAACP,KAAKM,CAAL,CAASa,MAAV,CAAkBnB,KAAKO,CAAL,CAAS,CAA3B,CAArB,CAA/B,CACH,CAdkB,CAAnB,CAeA,KAAKa,WAAL,CAAmB,KAAKzB,GAAL,CAChBiB,IADgB,CACX,MADW,CACH,MADG,EAEhBA,IAFgB,CAEX,gBAFW,CAEO,KAFP,EAGhBA,IAHgB,CAGX,OAHW,CAGF,MAHE,EAIhBA,IAJgB,CAIX,QAJW,CAID,MAJC,EAKhBS,KALgB,CAKV,QALU,CAKA,MALA,EAMhBC,IANgB,CAMX,KAAKnB,WANM,CAAnB,CAOA,KAAKoB,uBAAL,EACD,CA5FK,CA8FNC,iBA9FM,6BA8Fc,CAClB,GAAMC,eAAgB,KAAK9C,MAAL,CAAYsC,OAAZ,CAAoB,KAApB,CAA2B,EAA3B,CAAtB,CACA,GAAMS,uBAAwB,KAAK7C,qBAAnC,CACA,GAAM8C,qBAAuB,EAAID,qBAAjC,CACA,GAAG,CAAC,KAAKlC,eAAT,CAA0B,CACxB,GAAMoC,cAAeC,KAAKC,IAAL,CAAUL,cAAgBE,mBAA1B,CAArB,CACA,KAAKhD,MAAL,CAAc,KAAKA,MAAL,CAAYsC,OAAZ,CAAoBQ,aAApB,CAAmCG,YAAnC,CAAd,CACA,KAAKG,oBAAL,CAA4BF,KAAKC,IAAL,CAAUL,cAAgBC,qBAA1B,CAA5B,CACA,KAAKlC,eAAL,CAAuB,IACxB,CALD,IAKO,CACL,KAAKb,MAAL,CAAc,KAAKqD,aAAnB,CACA,KAAKD,oBAAL,CAA4B,CAA5B,CACA,KAAKE,oBAAL,CAA4B,CAA5B,CACA,KAAKzC,eAAL,CAAuB,KACxB,CACF,CA7GK,CA+GN0C,gBA/GM,4BA+Ga,CACjB,GAAG,KAAK1C,eAAR,CAAyB,CACvB,KAAKgC,iBAAL,EACD,CACF,CAnHK,CAqHNW,cArHM,0BAqHW,CACf,KAAKtC,CAAL,CAAOC,GAAP,CAAWqC,cAAX,EACD,CAvHK,CAwHNC,QAxHM,mBAwHGC,QAxHH,CAwHa,CACjB,KAAKC,gBAAL,CAAsBD,QAAtB,EAAgCE,OAAhC,CAAwC,SAACC,GAAD,CAAS,CAC/CA,IAAInB,KAAJ,CAAUoB,OAAV,CAAoB,OACrB,CAFD,CAGD,CA5HK,CA6HNC,QA7HM,mBA6HGL,QA7HH,CA6Ha,CACjB,KAAKC,gBAAL,CAAsBD,QAAtB,EAAgCE,OAAhC,CAAwC,SAACC,GAAD,CAAS,CAC/CA,IAAInB,KAAJ,CAAUoB,OAAV,CAAoB,MACrB,CAFD,CAGD,CAjIK,CAkINE,YAlIM,uBAkIOC,UAlIP,CAkImBC,SAlInB,CAkI8BC,WAlI9B,CAkI2C,CAC/C,GAAG,KAAKF,UAAL,CAAH,CAAqB,CACnB,KAAKF,QAAL,CAAcG,SAAd,EACA,KAAKC,WAAL,EAAoB,SACrB,CAHD,IAGO,CACL,KAAKV,QAAL,CAAcS,SAAd,EACA,KAAKC,WAAL,EAAoBC,SACrB,CACD,KAAKH,UAAL,EAAmB,CAAC,KAAKA,UAAL,CACrB,CA3IK,CA4INI,eA5IM,2BA4IY,CAChB,KAAKL,YAAL,CAAkB,mBAAlB,CACE,WADF,CACe,oBADf,CAED,CA/IK,CAgJNM,gBAhJM,4BAgJa,CACjB,KAAKN,YAAL,CAAkB,oBAAlB,CACE,YADF,CACgB,qBADhB,CAED,CAnJK,CAoJNO,iBApJM,6BAoJc,CAClB,KAAKP,YAAL,CAAkB,qBAAlB,CACE,aADF,CACiB,sBADjB,CAED,CAvJK,CAwJNQ,iBAxJM,6BAwJc,CAClB,KAAKR,YAAL,CAAkB,qBAAlB,CACE,aADF,CACiB,sBADjB,CAED,CA3JK,CA4JNS,QA5JM,mBA4JG5D,eA5JH,CA4JoB,CACxB,MAAO,CAACA,eACT,CA9JK,CA+JN6D,2BA/JM,sCA+JsBC,SA/JtB,CA+JiCC,SA/JjC,CA+J4C,CAChD,GAAG,CAACA,SAAJ,CAAe,CACb,KAAKvB,aAAL,CAAqBsB,SACtB,CACF,CAnKK,CAoKNE,aApKM,yBAoKU,CAAE,CApKZ,CAqKNC,OArKM,mBAqKI,CACR,KAAKtD,WAAL,CAAiBuD,OAAjB,CACE,KAAKtC,WAAL,CAAiBuC,UAAjB,GAA8BC,QAA9B,CAAuC,GAAvC,CADF,CAC+C,GAD/C,CAED,CAxKK,CAyKNC,QAzKM,oBAyKK,CACT,KAAK1D,WAAL,CAAiBuD,OAAjB,CACE,KAAKtC,WAAL,CAAiBuC,UAAjB,GAA8BC,QAA9B,CAAuC,GAAvC,CADF,CAC+C,EAAI,GADnD,CAED,CA5KK,CA6KNrC,uBA7KM,mCA6KoB,gBACxB,KAAKe,gBAAL,CAAsB,aAAtB,EAAqCC,OAArC,CAA6C,SAACC,GAAD,CAAS,CACpD,MAAKsB,MAAL,CAAYtB,GAAZ,CAAiB,KAAjB,CAAwB,kBAAxB,CACD,CAFD,CAGD,CAjLK,CAkLNuB,oBAlLM,gCAkLiB,CACrB,KAAK3C,WAAL,CAAiBuC,UAAjB,GACGC,QADH,CACY,GADZ,EAEGtC,IAFH,CAEQ,KAAKnB,WAAL,CAAiBW,SAFzB,CAGIpB,GAAGD,EAAH,CAAMuE,YAAN,CAAmBC,SAAnB,CAA6B,CAA7B,CAAgC,CAAhC,EAAmClD,KAAnC,CAAyC,CAAzC,CAHJ,CAID,CAvLK,CAwLN;;;;;;;;MASAmD,gBAjMM,2BAiMWrD,KAjMX,CAiMkB,CACtB,GAAG,CAAC,KAAKrB,eAAT,CAA0B,CACxB,KAAKgC,iBAAL,EACD,CACD,KAAK2C,IAAL,CAAU,mBAAV,CAA+B,CAC7BtD,MAAOA,KADsB,CAE7BuD,gBAAiBvD,MAAMwD,aAFM,CAG7BC,UAAWzD,MAAMwD,aAAN,CAAoBC,SAHF,CAA/B,CAKD,CA1MK,CAAR,CA4MD,CA7MD","file":"og-svg-map.js","sourcesContent":["(function() {\n  Polymer({\n\n    is: 'og-svg-map', \n\n    behaviors: [Polymer.IronResizableBehavior],\n\n    listeners: {\n      'iron-resize': '_onIronResize'\n    },\n\n    properties: {\n      /**\n       * Component width\n       * \n       * @type {String}\n       */\n      width: {\n        type: String,\n        value: '75vw'\n      },\n      /**\n      * Component Height\n      * \n      * @type {String}\n      */\n      height: {\n        type: String,\n        value: '500px',\n        observer: '_adjustFilterVerticalMargin'\n      },\n      /**\n       * Proportion of contextual pane to the whole window\n       * Must be less than 1.\n       * @type {Number}\n       */\n      contextPaneProportion: {\n        type: Number,\n        value: 0.35\n      },\n      isUpstreamVisible: {\n        type: Boolean,\n        value: true\n      },\n      isMidstreamVisible: {\n        type: Boolean,\n        value: true\n      },\n      isDownstreamVisible: {\n        type: Boolean,\n        value: true\n      },\n      isPredictiveVisible: {\n        type: Boolean,\n        value: true\n      },\n      now: {\n        type: String,\n        value() {\n          return new Date().getTime();\n        }\n      }\n    },\n\n    attached() {\n      this.contextPaneOpen = false;\n      const d3 = Px.d3;\n      this.svg  = d3.select(this.$.map.querySelector(\"svg\"));\n      let dims = this.$.map.querySelector(\"svg\").getBoundingClientRect();\n      const me = this;\n      this.zoomControl = d3.zoom()\n        .extent([[-dims.x, -dims.y], [dims.x, dims.y]])\n        .scaleExtent([1, 5])\n        .translateExtent([[-dims.x, -dims.y], [dims.x, dims.y*3]])\n        .on(\"zoom\", (e) => {\n          if(!dims.width) {\n              dims = me.$.map.querySelector(\"svg\").getBoundingClientRect();\n              me.zoomControl.extent([[-dims.x, -dims.y], [dims.x, dims.y]]);\n          }\n          me.svg.attr(\"transform\", d3.event.transform);\n          let scale = me.svg.attr(\"transform\").split(\"scale(\")[1].replace(\")\", \"\");\n          scale = parseFloat(scale);\n          const factor = scale == 1 ? 1 : ((scale-1)*10);\n          me.zoomControl.translateExtent([[-dims.x, -dims.y], [dims.x * factor, dims.y * 3]])\n      });\n      this.mapZoomArea = this.svg\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"width\", \"100%\")\n        .attr(\"height\", \"100%\")\n        .style(\"cursor\", \"grab\")\n        .call(this.zoomControl);\n      this._addContextualListeners();\n    },\n\n    toggleContextPane() {\n      const currHeightNum = this.height.replace(/\\D/g, '');\n      const cpMinHeightPercentage = this.contextPaneProportion;\n      const mapHeightPercentage = (1 - cpMinHeightPercentage);\n      if(!this.contextPaneOpen) {\n        const newMapHeight = Math.ceil(currHeightNum * mapHeightPercentage);\n        this.height = this.height.replace(currHeightNum, newMapHeight);\n        this.contextPaneMinHeight = Math.ceil(currHeightNum * cpMinHeightPercentage);\n        this.contextPaneOpen = true;\n      } else {\n        this.height = this.defaultHeight;\n        this.contextPaneMinHeight = 0;\n        this.contextPaneMaxHeight = 0;\n        this.contextPaneOpen = false;\n      }\n    },\n\n    closeContextPane() {\n      if(this.contextPaneOpen) {\n        this.toggleContextPane();\n      }\n    },\n\n    invalidateSize() {\n      this.$.map.invalidateSize();\n    },\n    _showAll(selector) {\n      this.querySelectorAll(selector).forEach((elt) => {\n        elt.style.display = 'block';\n      });\n    },\n    _hideAll(selector) {\n      this.querySelectorAll(selector).forEach((elt) => {\n        elt.style.display = 'none';\n      });\n    },\n    _toggleGroup(_stateName, _selector, _pressedCls) {\n      if(this[_stateName]) {\n        this._hideAll(_selector);\n        this[_pressedCls] = 'pressed';\n      } else {\n        this._showAll(_selector);\n        this[_pressedCls] = undefined;\n      }\n      this[_stateName] = !this[_stateName];\n    },\n    _toggleUpstream() {\n      this._toggleGroup('isUpstreamVisible', \n        '.upstream', 'upstreamPressedCls');\n    },\n    _toggleMidstream() {\n      this._toggleGroup('isMidstreamVisible', \n        '.midstream', 'midstreamPressedCls');\n    },\n    _toggleDownstream() {\n      this._toggleGroup('isDownstreamVisible', \n        '.downstream', 'downstreamPressedCls');\n    },\n    _togglePredictive() {\n      this._toggleGroup('isPredictiveVisible', \n        '.predictive', 'predictivePressedCls');\n    },\n    _compute(contextPaneOpen) {\n      return !contextPaneOpen;\n    },\n    _adjustFilterVerticalMargin(newHeight, oldHeight) {\n      if(!oldHeight) {\n        this.defaultHeight = newHeight;\n      }\n    },\n    _onIronResize() {},\n    _zoomIn() {\n      this.zoomControl.scaleBy(\n        this.mapZoomArea.transition().duration(500), 1.3);\n    },\n    _zoomOut() {\n      this.zoomControl.scaleBy(\n        this.mapZoomArea.transition().duration(500), 1 / 1.3);\n    },\n    _addContextualListeners() {\n      this.querySelectorAll('.contextual').forEach((elt) => {\n        this.listen(elt, 'tap', '_openContextPane');\n      });\n    },\n    _gotoDefaultLocation() {\n      this.mapZoomArea.transition()\n        .duration(750)\n        .call(this.zoomControl.transform, \n          Px.d3.zoomIdentity.translate(0, 0).scale(1));\n    },\n    /**\n    * Fires event when a class named `contextual` is tapped\n    *\n    *   * {Object} event - Contains the event details\n    *   * {Element} contextFragment - Target on which the tap event occured\n    *   * {Array} classList - Classes on the tapped element\n    *\n    * @event contextual-tapped\n    */\n    _openContextPane(event) {\n      if(!this.contextPaneOpen) {\n        this.toggleContextPane();\n      }\n      this.fire('contextual-tapped', {\n        event: event, \n        contextFragment: event.currentTarget,\n        classList: event.currentTarget.classList\n      });\n    }\n  });\n})();\n"]}